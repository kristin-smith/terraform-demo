terraform demo:

Step one, download zip file (need to already have an AWS account and credentials to read/modify the following - may be a consideration)
Step two, create s3 bucket for backend
Step three, terraform init and go look at bucket to see the statefile
Step 4, review terraform project in its existing state with two modules
Step 5, run a terraform plan and apply to bring up the resources
	terraform state list
		module.messaging-application.aws_cloudwatch_event_rule.morning_reminder
		module.messaging-application.aws_cloudwatch_event_target.morning_reminder_lambda
		module.messaging-application.aws_iam_role.iam_for_lambda
		module.messaging-application.aws_lambda_function.morning_reminder_lambda
		module.web-application.aws_default_vpc.default
		module.web-application.aws_instance.web-application
		module.web-application.aws_key_pair.demo-key
		module.web-application.aws_security_group.web-application-http
	
step 6, go over potential split
	create new project
	remove modules from main.tf in each and then delete the respective directories
	terraform plan | grep destroyed on terraform-demo (good scripting to loop through and run terraform state rm on each)
	terraform init with messaging-repo key
	terraform plan | grep destroyed                                       
	  # module.web-application.aws_default_vpc.default will be destroyed
	  # module.web-application.aws_instance.web-application will be destroyed
	  # module.web-application.aws_key_pair.demo-key will be destroyed
	  # module.web-application.aws_security_group.web-application-http will be destroyed (validate it's the same, then do some good scripting to loop through and run terraform state rm on each)

	new project:
	Update bucket
	terraform init and terraform plan

	terraform plan | grep destroyed


Step 7, unify them again (if your refector involves combining two repos)
	cp web-application difector back into terraform-demo
	update bucket, and module list

	terraform init
	terraform plan | grep created (these resources actually exist)
		we could reimport them but that's impractical at scale
	cd terraform-web-application-demo
	terraform state pull
	copy module.web-application resources and add to unified-repo-again-2, update serial from 0 to 1

	reset the bucket for the terraform-demo and terraform init, terraform plan - should all be back in order

		